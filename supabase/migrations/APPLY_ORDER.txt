ORDRE D'APPLICATION DES MIGRATIONS CORRIG√âES
=============================================

‚úÖ MIGRATIONS √Ä APPLIQUER (dans cet ordre):

1Ô∏è‚É£ 20250820_add_rls_policies_v3.sql ‚¨ÖÔ∏è UTILISEZ CELUI-CI (DERNI√àRE VERSION)
   - Active RLS sur toutes les tables
   - Policies simplifi√©es SANS colonne "role" 
   - ‚úÖ CORRIGE l'erreur "column reference 'id' is ambiguous"
   - Utilise des alias explicites (p.id, q.id, qz.id, s.id)
   - Compatible avec la structure actuelle

2Ô∏è‚É£ 20250820_optimize_quiz_queries_fixed.sql ‚úÖ D√âJ√Ä APPLIQU√â
   - Vue mat√©rialis√©e pour les performances
   - Calcule points_total_calcule depuis les questions
   - Fonctions d'optimisation
   - Refresh automatique du cache

3Ô∏è‚É£ 20250820_optional_add_admin_support.sql üîÑ OPTIONNEL
   - √Ä appliquer SEULEMENT si vous voulez des admins
   - Ajoute la colonne is_admin
   - Met √† jour les policies pour supporter les admins
   - Cr√©e des fonctions de gestion admin

‚ö†Ô∏è NE PAS UTILISER:
- 20250820_add_rls_policies.sql (erreur "column 'role' does not exist")
- 20250820_add_rls_policies_fixed.sql (erreur "column 'role' does not exist")
- 20250820_add_rls_policies_v2.sql (erreur "column reference 'id' is ambiguous")
- 20250820_optimize_quiz_queries.sql (erreur "points_total")

NOTES IMPORTANTES:
- Utiliser points_total_calcule au lieu de points_total dans le code
- La vue mat√©rialis√©e se rafra√Æchit automatiquement
- Pour forcer un refresh manuel: SELECT refresh_quiz_cache();